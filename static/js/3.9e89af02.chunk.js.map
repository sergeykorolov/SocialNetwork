{"version":3,"sources":["../node_modules/redux-form/es/Form.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.js","components/Profile/ProfileInfo/ProfileDataForm.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js"],"names":["Form","_Component","props","_this","call","this","_reduxForm","Error","_inheritsLoose","_proto","prototype","UNSAFE_componentWillMount","registerInnerOnSubmit","onSubmit","render","_this$props","rest","_objectWithoutPropertiesLoose","React","createElement","Component","propTypes","PropTypes","func","isRequired","object","withReduxForm","module","exports","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","event","currentTarget","value","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","error","className","styleForm","formSummaryError","createField","Input","type","Textarea","Object","keys","contacts","map","key","style","contact","ProfileData","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","ProfileInfo","savePhoto","saveProfile","descriptionBlock","src","photos","large","userPhoto","mainPhoto","e","target","files","length","initialValues","formData","then","Post","item","message","like","maxLength10","maxLengthCreator","AddNewPostReduxForm","Field","placeholder","name","component","validate","required","MyPosts","postsElements","posts","post","likesCount","id","postsBlock","addPost","newPostText","MyPostsContainer","connect","state","profilePage","avatars","Profile","Preloader","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","compose","userProfile","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.9e89af02.chunk.js","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withReduxForm } from './ReduxFormContext';\n\nvar Form =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Form, _Component);\n\n  function Form(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n\n    if (!props._reduxForm) {\n      throw new Error('Form must be inside a component decorated with reduxForm()');\n    }\n\n    return _this;\n  }\n\n  var _proto = Form.prototype;\n\n  _proto.UNSAFE_componentWillMount = function UNSAFE_componentWillMount() {\n    this.props._reduxForm.registerInnerOnSubmit(this.props.onSubmit);\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        _reduxForm = _this$props._reduxForm,\n        rest = _objectWithoutPropertiesLoose(_this$props, [\"_reduxForm\"]);\n\n    return React.createElement(\"form\", rest);\n  };\n\n  return Form;\n}(Component);\n\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  _reduxForm: PropTypes.object\n};\nexport default withReduxForm(Form);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__ti6nt\",\"contact\":\"ProfileInfo_contact__17jX-\",\"mainPhoto\":\"ProfileInfo_mainPhoto__imJtH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3iggj\",\"posts\":\"MyPosts_posts__1rnu_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3twkH\"};","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    // выполняется после отрисовки компоненты всегда когда придет другой status\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (event) => {\r\n        setStatus(event.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <b>Status: </b><span onDoubleClick={activateEditMode}>{status || \"---------\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input autoFocus={true}\r\n                       onBlur={deactivateEditMode}\r\n                       onChange={onStatusChange}\r\n                       value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport {Form, reduxForm} from \"redux-form\";\r\nimport {createField, Input, Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport style from './ProfileInfo.module.css';\r\nimport styleForm from '../../common/FormsControls/FormsControls.module.css';\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <div><button>save</button></div>\r\n            {error && <div className={styleForm.formSummaryError}>\r\n                {error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <b>Full name</b>: {createField(\"Full name\", \"fullName\", [], Input)}\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job</b>: {createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"})}\r\n            </div>\r\n            <div>\r\n                <b>My professional skills</b>:\r\n                {createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea )}\r\n            </div>\r\n\r\n            <div>\r\n                <b>About me</b>: {createField(\"About me\", \"aboutMe\", [], Textarea )}\r\n            </div>\r\n            <div><b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n                return <div key={key} className={style.contact}>\r\n                    <b>{key}:</b> {createField(key, \"contacts.\" + key, [], Input)}\r\n                </div>\r\n            })}</div>\r\n        </Form>\r\n    )\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm);\r\n\r\nexport default ProfileDataFormReduxForm;","import React, {useState} from \"react\";\r\nimport style from \"./ProfileInfo.module.css\";\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({isOwner, profile, status, updateStatus, savePhoto, saveProfile}) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false);\r\n            }\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={style.descriptionBlock}>\r\n                <img src={profile.photos.large || userPhoto} className={style.mainPhoto}/>\r\n                {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected}/>}\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n\r\n                {editMode\r\n                    ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\r\n                    : <ProfileData profile={profile} isOwner={isOwner} goToEditMode={() => {\r\n                        setEditMode(true)\r\n                    }}/>}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return (\r\n        <div>\r\n            {isOwner && <div>\r\n                <button onClick={goToEditMode}>edit</button>\r\n            </div>}\r\n            <div><b>Full name</b>: {profile.fullName}</div>\r\n            <div><b>Looking for a job</b>: {profile.lookingForAJob ? \"yes\" : \"no\"}</div>\r\n            {profile.lookingForAJob &&\r\n            <div><b>My professional skills</b>: {profile.lookingForAJobDescription}</div>}\r\n\r\n            <div><b>About me</b>: {profile.aboutMe}</div>\r\n            <div><b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n                return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n            })}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={style.contact}><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport style from './Post.module.css';\r\nimport userPhoto from \"../../../../assets/images/user.png\"\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={style.item}>\r\n            <img src={userPhoto}/>\r\n            {props.message}\r\n            <div>\r\n                <span>like {props.like}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport style from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst MyPosts = (props) => {\r\n\r\n    let postsElements = props.posts\r\n        .map(post => <Post message={post.message} like={post.likesCount} key={post.id}/>);\r\n\r\n    const onAddPost = (formData) => {\r\n        props.addPost(formData.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={style.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostReduxForm onSubmit={onAddPost}/>\r\n            <div className={style.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder=\"new post\" name=\"newPostText\" component={Textarea}\r\n                       validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostReduxForm = reduxForm({form: 'profileAddNewPostForm'})(AddNewPostForm);\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport {addPost} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n        avatars: state.profilePage.avatars,\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {addPost})(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (<>\r\n            {!props.profile\r\n                ? <Preloader/>\r\n                : <div>\r\n                    <ProfileInfo isOwner={props.isOwner}\r\n                                 profile={props.profile}\r\n                                 status={props.status}\r\n                                 updateStatus={props.updateStatus}\r\n                                 savePhoto={props.savePhoto}\r\n                                 saveProfile={props.saveProfile}/>\r\n                    <MyPostsContainer/>\r\n                </div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Profile;","import Profile from \"./Profile\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    // срабатывает при первом монтировании компоненты\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    // срабатывает при каждом изменении props\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     isOwner={!this.props.match.params.userId}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n                     savePhoto={this.props.savePhoto}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.userProfile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\n/* compose берет ProfileContainer и отдает сначала в withAuthRedirect,\r\n   затем вернувшийся результат в withRouter, а затем в connect */\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter\r\n)(ProfileContainer)"],"sourceRoot":""}