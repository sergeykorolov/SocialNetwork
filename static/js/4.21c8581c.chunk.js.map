{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.js","components/Dialogs/Message/Message.js","components/Dialogs/Dialogs.js","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.js"],"names":["module","exports","DialogItem","props","path","id","className","style","dialog","src","avatar","to","activeClassName","activeLink","name","Message","message","maxLength50","maxLengthCreator","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","validate","required","component","Textarea","Dialogs","dialogsElements","dialogs","map","key","avatars","messagesElements","messages","profile","isAuth","dialogsItems","formData","addMessage","newMessageText","mapStateToPropsForRedirect","state","auth","compose","connect","dialogsPage","profilePage","userProfile","Component","RedirectComponent","this","React"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,WAAa,4BAA4B,SAAW,0BAA0B,QAAU,2B,sFCc5MC,EAXI,SAACC,GAChB,IAAIC,EAAO,aAAeD,EAAME,GAEhC,OACI,yBAAKC,UAAWC,IAAMC,QAClB,yBAAKC,IAAKN,EAAMO,SAChB,kBAAC,IAAD,CAASC,GAAIP,EAAMQ,gBAAiBL,IAAMM,YAAaV,EAAMW,QCE1DC,EATC,SAACZ,GACb,OACI,yBAAKG,UAAWC,IAAMS,SAClB,yBAAKP,IAAKN,EAAMO,SAChB,8BAAOP,EAAMa,W,yCC4BnBC,EAAcC,YAAiB,IAkB/BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAhBL,SAACjB,GACpB,OACI,0BAAMmB,SAAUnB,EAAMoB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,YAAY,qBAAqBX,KAAK,iBACtCY,SAAU,CAACC,IAAUV,GACrBW,UAAWC,OAEtB,6BACI,+FASDC,EA9CC,SAAC3B,GAEb,IAAI4B,EAAkB5B,EAAM6B,QACvBC,KAAI,SAAAzB,GAAM,OAAI,kBAAC,EAAD,CAAY0B,IAAK1B,EAAOH,GAAIA,GAAIG,EAAOH,GAAIS,KAAMN,EAAOM,KAAMJ,OAAQP,EAAMgC,QAAQ3B,EAAOH,GAAG,GAAGK,YAChH0B,EAAmBjC,EAAMkC,SACxBJ,KAAI,SAAAjB,GAAO,OAAI,kBAAC,EAAD,CAASA,QAASA,EAAQA,QAASN,OAAQP,EAAMgC,QAAQnB,EAAQX,GAAG,GAAGK,OAAQ4B,QAASnC,EAAMmC,aAElH,IAAKnC,EAAMoC,OAAQ,OAAO,kBAAC,IAAD,CAAU5B,GAAI,WAMxC,OACI,yBAAKL,UAAWC,IAAMyB,SAClB,yBAAK1B,UAAWC,IAAMiC,cACjBT,GAEL,yBAAKzB,UAAWC,IAAM8B,UACjBD,GAEL,kBAACjB,EAAD,CAAqBG,SAZV,SAACmB,GAChBtC,EAAMuC,WAAWD,EAASE,qB,gDCf9BC,EAA6B,SAACC,GAAD,MAAY,CACzCN,OAAQM,EAAMC,KAAKP,S,gBCWRQ,sBACXC,aAVkB,SAACH,GACnB,MAAO,CACHb,QAASa,EAAMI,YAAYjB,QAC3BK,SAAUQ,EAAMI,YAAYZ,SAC5BF,QAASU,EAAMI,YAAYd,QAC3BG,QAASO,EAAMK,YAAYC,eAKN,CAACT,kBDTE,SAACU,GAAe,IAEtCC,EAFqC,iLAInC,OAAKC,KAAKnD,MAAMoC,OACT,kBAACa,EAAcE,KAAKnD,OADI,kBAAC,IAAD,CAAUQ,GAAI,eAJV,GAEX4C,IAAMH,WAStC,OAFqCJ,YAAQJ,EAARI,CAAoCK,KCD9DN,CAGbjB","file":"static/js/4.21c8581c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__iCXcz\",\"dialogsItems\":\"Dialogs_dialogsItems__3R_DA\",\"dialog\":\"Dialogs_dialog__1KkBl\",\"activeLink\":\"Dialogs_activeLink__fmbvz\",\"messages\":\"Dialogs_messages__iAoWP\",\"message\":\"Dialogs_message__i31Lk\"};","import style from \"../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/messages/\" + props.id;\r\n\r\n    return (\r\n        <div className={style.dialog}>\r\n            <img src={props.avatar}/>\r\n            <NavLink to={path} activeClassName={style.activeLink}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import style from \"../Dialogs.module.css\";\r\nimport React from \"react\";\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={style.message}>\r\n            <img src={props.avatar}/>\r\n            <span>{props.message}</span>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Message;","import React from \"react\";\r\nimport style from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogsElements = props.dialogs\r\n        .map(dialog => <DialogItem key={dialog.id} id={dialog.id} name={dialog.name} avatar={props.avatars[dialog.id-1].avatar}/>);\r\n    let messagesElements = props.messages\r\n        .map(message => <Message message={message.message} avatar={props.avatars[message.id-1].avatar} profile={props.profile}/>);\r\n\r\n    if (!props.isAuth) return <Redirect to={\"/login\"}/>\r\n\r\n    const addMessage = (formData) => {\r\n        props.addMessage(formData.newMessageText);\r\n    }\r\n\r\n    return (\r\n        <div className={style.dialogs}>\r\n            <div className={style.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={style.messages}>\r\n                {messagesElements}\r\n            </div>\r\n            <AddMessageReduxForm onSubmit={addMessage}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder=\"Enter your message\" name=\"newMessageText\"\r\n                       validate={[required, maxLength50]}\r\n                       component={Textarea}/>\r\n            </div>\r\n            <div>\r\n                <button>Отправить</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\n// redux-form оборачивает\r\nconst AddMessageReduxForm = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm);\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={\"/login\"}/>;\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import React from \"react\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {addMessage} from \"../../redux/dialogs-reducer\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        messages: state.dialogsPage.messages,\r\n        avatars: state.dialogsPage.avatars,\r\n        profile: state.profilePage.userProfile\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {addMessage}),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}