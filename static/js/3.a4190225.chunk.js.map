{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","event","currentTarget","value","ProfileInfo","profile","src","className","style","descriptionBlock","photos","large","userPhoto","aboutMe","contacts","facebook","vk","github","fullName","Preloader","Post","item","message","like","maxLength10","maxLengthCreator","AddNewPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","name","component","Textarea","validate","required","MyPosts","postsElements","posts","map","post","likesCount","key","id","postsBlock","formData","addPost","newPostText","MyPostsContainer","connect","state","profilePage","avatars","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","React","Component","compose","userProfile","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.a4190225.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__ti6nt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3iggj\",\"posts\":\"MyPosts_posts__1rnu_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3twkH\"};","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    // выполняется после отрисовки компоненты всегда когда придет другой status\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (event) => {\r\n        setStatus(event.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{status || \"---------\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input autoFocus={true}\r\n                       onBlur={deactivateEditMode}\r\n                       onChange={onStatusChange}\r\n                       value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport style from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n\r\n    if(!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img src=\"https://www.appiapolis.it/wp-content/uploads/2020/01/DSCF2192-1024x319.jpg\"/>\r\n            </div>\r\n            <div className={style.descriptionBlock}>\r\n                <img src={profile.photos.large != null ? profile.photos.large : userPhoto}/>\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n                <div><b>Обо мне:</b> {profile.aboutMe}</div>\r\n                <div><b>Контакты:</b> {profile.contacts.facebook} {profile.contacts.vk} {profile.contacts.github}</div>\r\n                <div><b>Имя:</b> {profile.fullName}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport style from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={style.item}>\r\n            <img src=\"https://ubistatic19-a.akamaihd.net/ubicomstatic/en-gb/global/buy-now/512_mobile_292979.png\"/>\r\n            {props.message}\r\n            <div>\r\n                <span>like {props.like}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport style from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst MyPosts = (props) => {\r\n\r\n    let postsElements = props.posts\r\n        .map(post => <Post message={post.message} like={post.likesCount} key={post.id}/>);\r\n\r\n    const onAddPost = (formData) => {\r\n        props.addPost(formData.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={style.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostReduxForm onSubmit={onAddPost}/>\r\n            <div className={style.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder=\"new post\" name=\"newPostText\" component={Textarea}\r\n                       validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostReduxForm = reduxForm({form: 'profileAddNewPostForm'})(AddNewPostForm);\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport {addPost} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n        avatars: state.profilePage.avatars,\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {addPost})(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import Profile from \"./Profile\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if(!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.userProfile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\n/* compose берет ProfileContainer и отдает сначала в withAuthRedirect,\r\n   затем вернувшийся результат в withRouter, а затем в connect */\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter\r\n)(ProfileContainer)"],"sourceRoot":""}