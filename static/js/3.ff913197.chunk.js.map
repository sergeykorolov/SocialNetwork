{"version":3,"sources":["../node_modules/redux-form/es/Form.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","assets/images/likeActive.svg","assets/images/likeNotActive.svg","components/Profile/ProfileInfo/ProfileStatusWithHooks.js","components/Profile/ProfileInfo/ProfileDataForm.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js"],"names":["Form","_Component","props","_this","call","this","_reduxForm","Error","_inheritsLoose","_proto","prototype","UNSAFE_componentWillMount","registerInnerOnSubmit","onSubmit","render","_this$props","rest","_objectWithoutPropertiesLoose","React","createElement","Component","propTypes","PropTypes","func","isRequired","object","withReduxForm","module","exports","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","className","style","statusBody","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","event","currentTarget","value","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","error","styleForm","formSummaryError","itemLabel","input","createField","Input","checkbox","type","textarea","Textarea","Object","keys","contacts","map","key","contactForm","ProfileData","isOwner","goToEditMode","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","onClick","Contact","contact","ProfileInfo","savePhoto","saveProfile","inputElement","setInputElement","mainPhotoBlock","src","photos","large","userPhoto","mainPhoto","editPhotoIcon","click","alwaysHide","ref","e","target","files","length","then","descriptionBlock","initialValues","formData","Post","item","photo","message","like","changeLikesCount","postId","likesCount","likeStatus","likeActive","likeNotActive","maxLength","maxLengthCreator","AddNewPostReduxForm","Field","placeholder","name","component","validate","add","MyPosts","newPostField","setNewPostField","postsElements","posts","post","id","postsBlock","newPost","addPost","newPostText","cancel","MyPostsContainer","connect","state","profilePage","avatars","userProfile","small","Profile","Preloader","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.ff913197.chunk.js","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withReduxForm } from './ReduxFormContext';\n\nvar Form =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Form, _Component);\n\n  function Form(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n\n    if (!props._reduxForm) {\n      throw new Error('Form must be inside a component decorated with reduxForm()');\n    }\n\n    return _this;\n  }\n\n  var _proto = Form.prototype;\n\n  _proto.UNSAFE_componentWillMount = function UNSAFE_componentWillMount() {\n    this.props._reduxForm.registerInnerOnSubmit(this.props.onSubmit);\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        _reduxForm = _this$props._reduxForm,\n        rest = _objectWithoutPropertiesLoose(_this$props, [\"_reduxForm\"]);\n\n    return React.createElement(\"form\", rest);\n  };\n\n  return Form;\n}(Component);\n\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  _reduxForm: PropTypes.object\n};\nexport default withReduxForm(Form);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__ti6nt\",\"mainPhotoBlock\":\"ProfileInfo_mainPhotoBlock__362yy\",\"mainPhoto\":\"ProfileInfo_mainPhoto__imJtH\",\"editPhotoIcon\":\"ProfileInfo_editPhotoIcon__3WqSU\",\"itemLabel\":\"ProfileInfo_itemLabel__15biK\",\"contact\":\"ProfileInfo_contact__17jX-\",\"contactForm\":\"ProfileInfo_contactForm__1KPf0\",\"status\":\"ProfileInfo_status__ifvIX\",\"statusBody\":\"ProfileInfo_statusBody__uQrPv\",\"alwaysHide\":\"ProfileInfo_alwaysHide__3J3SP\",\"editPhoto\":\"ProfileInfo_editPhoto__O6tR6\",\"input\":\"ProfileInfo_input__2Re8J\",\"textarea\":\"ProfileInfo_textarea__rtzK1\",\"checkbox\":\"ProfileInfo_checkbox__1QGsB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3iggj\",\"posts\":\"MyPosts_posts__1rnu_\",\"newPost\":\"MyPosts_newPost__b_hKx\",\"add\":\"MyPosts_add__478Bz\",\"cancel\":\"MyPosts_cancel__1qpbp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3twkH\",\"photo\":\"Post_photo__1gRZc\",\"message\":\"Post_message__AiF5J\",\"like\":\"Post_like__2FQv3\",\"likeStatus\":\"Post_likeStatus__1_lSS\",\"likesCount\":\"Post_likesCount__a8V5H\"};","module.exports = __webpack_public_path__ + \"static/media/likeActive.33b9e07d.svg\";","module.exports = __webpack_public_path__ + \"static/media/likeNotActive.9fb8cb90.svg\";","import React, {useEffect, useState} from \"react\";\r\nimport style from \"./ProfileInfo.module.css\"\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    // выполняется после отрисовки компоненты всегда когда придет другой status\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (event) => {\r\n        setStatus(event.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div className={style.status}>\r\n                <strong>Status: </strong>\r\n                <span className={style.statusBody} onDoubleClick={activateEditMode}>{status || \"---------\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input autoFocus={true}\r\n                       onBlur={deactivateEditMode}\r\n                       onChange={onStatusChange}\r\n                       value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport {Form, reduxForm} from \"redux-form\";\r\nimport {createField, Input, Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport style from './ProfileInfo.module.css';\r\nimport styleForm from '../../common/FormsControls/FormsControls.module.css';\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            {error && <div className={styleForm.formSummaryError}>\r\n                {error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <strong className={style.itemLabel}>Full name:</strong>\r\n                <div className={style.input}>{createField(\"Full name\", \"fullName\", [], Input)}</div>\r\n            </div>\r\n            <div>\r\n                <strong className={style.itemLabel}>Looking for a job:</strong>\r\n                <div className={style.checkbox}>{createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"})}</div>\r\n            </div>\r\n            <div>\r\n                <strong className={style.itemLabel}>My professional skills:</strong>\r\n                <div className={style.textarea}>{createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea )}</div>\r\n            </div>\r\n\r\n            <div>\r\n                <strong className={style.itemLabel}>About me:</strong>\r\n                <div className={style.textarea}>{createField(\"About me\", \"aboutMe\", [], Textarea )}</div>\r\n            </div>\r\n            <div><strong>Contacts:</strong> {Object.keys(profile.contacts).map(key => {\r\n                return <div key={key}>\r\n                    <strong className={style.contactForm}>{key}:</strong>\r\n                    <div className={style.input}>{createField(key, \"contacts.\" + key, [], Input)}</div>\r\n                </div>\r\n            })}</div>\r\n            <div><button>save</button></div>\r\n        </Form>\r\n    )\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm);\r\n\r\nexport default ProfileDataFormReduxForm;","import React, {useEffect, useState} from \"react\";\r\nimport style from \"./ProfileInfo.module.css\";\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({isOwner, profile, status, updateStatus, savePhoto, saveProfile}) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [inputElement, setInputElement] = useState(null);\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]).then(\r\n                () => {\r\n                    setInputElement(null);\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false);\r\n            }\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={style.mainPhotoBlock}>\r\n                <img src={profile.photos.large || userPhoto} className={style.mainPhoto}/>\r\n                {isOwner &&\r\n                <div>\r\n                    <div className={style.editPhotoIcon} onClick={() => inputElement.click()}></div>\r\n                    <input className={style.alwaysHide}\r\n                           ref={input => setInputElement(input)}\r\n                           type={\"file\"}\r\n                           onChange={onMainPhotoSelected}/>\r\n                </div>\r\n                }\r\n            </div>\r\n            <div className={style.descriptionBlock}>\r\n                {editMode\r\n                    ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\r\n                    : <ProfileData profile={profile} status={status} updateStatus={updateStatus} isOwner={isOwner}\r\n                                   goToEditMode={() => {\r\n                                       setEditMode(true)\r\n                                   }}/>}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode, status, updateStatus}) => {\r\n    return (\r\n        <div>\r\n            <div><h3>{profile.fullName}</h3></div>\r\n            <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            <div><strong className={style.itemLabel}>Looking for a job:</strong>{profile.lookingForAJob ? \"yes\" : \"no\"}\r\n            </div>\r\n            {profile.lookingForAJob &&\r\n            <div><strong className={style.itemLabel}>My professional skills:</strong>{profile.lookingForAJobDescription}\r\n            </div>}\r\n\r\n            <div><strong className={style.itemLabel}>About me:</strong>{profile.aboutMe}</div>\r\n            <div><strong>Contacts:</strong>{Object.keys(profile.contacts).map(key => {\r\n                return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n            })}</div>\r\n            {isOwner && <div>\r\n                <button onClick={goToEditMode}>edit</button>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div><strong className={style.contact}>{contactTitle}:</strong> {contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport style from './Post.module.css';\r\nimport photo from \"../../../../assets/images/user.png\"\r\nimport likeActive from \"../../../../assets/images/likeActive.svg\"\r\nimport likeNotActive from \"../../../../assets/images/likeNotActive.svg\"\r\n\r\nconst Post = (props) => {\r\n\r\n    const changeLikesCount = () => {\r\n        props.changeLikesCount(props.postId, props.likesCount, !props.likeStatus);\r\n    }\r\n\r\n    return (\r\n        <div className={style.item}>\r\n            <div className={style.photo}><img src={props.userPhoto || photo}/></div>\r\n            <div className={style.message}>\r\n                {props.message}\r\n                <div className={style.like} onClick={changeLikesCount}>\r\n                    <div className={style.likeStatus}>\r\n                        {props.likeStatus\r\n                            ? <img src={likeActive}/>\r\n                            : <img src={likeNotActive}/>\r\n                        }\r\n                    </div>\r\n                    <div className={style.likesCount}>{props.likesCount}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React, {useState} from \"react\";\r\nimport style from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst MyPosts = (props) => {\r\n\r\n    let [newPostField, setNewPostField] = useState(false);\r\n\r\n    let postsElements = props.posts\r\n        .map(post => <Post postId={post.id}\r\n                           message={post.message}\r\n                           likesCount={post.likesCount}\r\n                           likeStatus={post.likeStatus}\r\n                           userPhoto={props.userPhoto}\r\n                           changeLikesCount={props.changeLikesCount}\r\n                           key={post.id}/>);\r\n\r\n    const onAddPost = (formData) => {\r\n        props.addPost(formData.newPostText);\r\n        setNewPostField(false);\r\n    }\r\n\r\n    return (\r\n        <div className={style.postsBlock}>\r\n            <h3>My posts</h3>\r\n            {! newPostField\r\n                ? <button onClick={() => setNewPostField(true)}>Add new post</button>\r\n                : <div className={style.newPost}>\r\n                    <AddNewPostReduxForm setNewPostField={setNewPostField} onSubmit={onAddPost}/>\r\n                    <button className={style.cancel} onClick={() => setNewPostField(false)}>Cancel</button>\r\n                </div>\r\n            }\r\n            <div className={style.posts}>{postsElements}</div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst maxLength = maxLengthCreator(50);\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field autoFocus={true} placeholder=\"new post\" name=\"newPostText\" component={Textarea}\r\n                       validate={maxLength}/>\r\n            </div>\r\n            <div className={style.add}>\r\n                <button>Add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostReduxForm = reduxForm({form: 'profileAddNewPostForm'})(AddNewPostForm);\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport {addPost, changeLikesCount} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n        avatars: state.profilePage.avatars,\r\n        userPhoto: state.profilePage.userProfile.photos.small\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {addPost, changeLikesCount})(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (<>\r\n            {!props.profile\r\n                ? <Preloader/>\r\n                : <div>\r\n                    <ProfileInfo isOwner={props.isOwner}\r\n                                 profile={props.profile}\r\n                                 status={props.status}\r\n                                 updateStatus={props.updateStatus}\r\n                                 savePhoto={props.savePhoto}\r\n                                 saveProfile={props.saveProfile}/>\r\n                    <MyPostsContainer/>\r\n                </div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Profile;","import Profile from \"./Profile\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    // срабатывает при первом монтировании компоненты\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    // срабатывает при каждом изменении props\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     isOwner={!this.props.match.params.userId}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n                     savePhoto={this.props.savePhoto}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.userProfile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\n/* compose берет ProfileContainer и отдает сначала в withAuthRedirect,\r\n   затем вернувшийся результат в withRouter, а затем в connect */\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter\r\n)(ProfileContainer)"],"sourceRoot":""}